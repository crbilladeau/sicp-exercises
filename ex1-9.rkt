#lang racket
;Each of the following two procedures defines a method for adding two positive integers in terms of the procedures inc,
; which increments its argument by 1, and dec, which decrements its argument by 1.

; 1.
(define (+ a b)
  (if (= a 0)
      b
      (inc (+ (dec a) b))))
; 2.
(define (+ a b)
  (if (= a 0)
      b
      (+ (dec a) (inc b))))

; Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5). Are these processes iterative or recursive?
; 1. recursive
(+ 4 5)
(inc (+ 3 5))
(inc (inc (+ 2 5)))
(inc (inc (inc (+ 1 5))))
(inc (inc (inc (inc (+ 0 5)))))
(inc (inc (inc (inc (5)))))
(inc (inc (inc (6))))
(inc (inc (7)))
(inc (8))
9

;2 iterative
(+ 4 5)
(+ 3 6)
(+ 2 7)
(+ 1 8)
(+ 0 9)
9

;; The key difference is that in the procedure, the inc is applied OUTSIDE the recursive call while in the second procedure the inc is applied
;; WITHIN the recursive call. This means that in procedure one it applies increments AFTER all recursive calls have been made, while in the
;; second procedure it increments DURING each recursive call.